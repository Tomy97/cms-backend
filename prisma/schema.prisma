// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int      @id @default(autoincrement())
  email     String @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Client    Client[]
}

model Client {
  clientId  Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [userId])
  name      String
  cityId    Int
  city      City     @relation(fields: [cityId], references: [cityId])
  stateId   Int
  state     State    @relation(fields: [stateId], references: [stateId])
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Product {
  productId   Int      @id @default(autoincrement())
  userId      Int
  title       String
  price       Decimal
  stock       Int
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [categoryId])
  image       Bytes
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  Order       Order[]
}

model Category {
  categoryId Int       @id @default(autoincrement())
  userId     Int
  title      String
  image      Bytes
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  Product    Product[]
}

model Order {
  idOrder         Int           @id @default(autoincrement())
  userId          Int
  clientId        Int
  product         Product       @relation(fields: [productId], references: [productId])
  productId       Int
  state           State         @relation(fields: [stateId], references: [stateId])
  stateId         Int
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [paymentMethodId])
  paymentMethodId Int
  deliveryDate    DateTime
  description     String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}

model State {
  stateId Int      @id @default(autoincrement())
  name    String
  Client  Client[]
  Order   Order[]
}

model PaymentMethod {
  paymentMethodId Int     @id @default(autoincrement())
  name            String
  Order           Order[]
}

model City {
  cityId Int      @id @default(autoincrement())
  name   String
  Client Client[]
}
